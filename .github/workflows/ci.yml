name: 🧪 Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Build and start services
      - name: Build Docker Services
        run: |
          echo "Building services..."
          docker compose build --parallel

      - name: Start Services
        run: |
          echo "Starting services..."
          docker compose up -d
          sleep 30

      # Wait for services to be ready
      - name: Wait for Services
        run: |
          echo "Waiting for MySQL..."
          timeout 60 bash -c 'until docker compose exec -T mysql mysqladmin ping -h localhost -u root -proot --silent; do sleep 2; done'
          
          echo "Waiting for Redis..."
          timeout 30 bash -c 'until docker compose exec -T redis redis-cli ping | grep -q PONG; do sleep 2; done'

      # Run PHP API Tests
      - name: Run PHP API Tests
        run: |
          echo "Running PHP API tests with PHPUnit..."
          
          # Check if PHPUnit is available
          if docker compose exec -T lumen test -f vendor/bin/phpunit; then
            echo "PHPUnit found, running test suite..."
            
            # Run database migrations for testing
            docker compose exec -T lumen php artisan migrate --env=testing --force || echo "Migrations completed"
            
            # Run the full PHPUnit test suite
            docker compose exec -T lumen php vendor/bin/phpunit --testdox --colors=always --stop-on-failure
            
            echo "✅ PHPUnit tests completed successfully"
          else
            echo "❌ PHPUnit not available - Composer dependencies not installed properly"
            echo "This indicates an issue with the Lumen Dockerfile setup"
            exit 1
          fi

      # Run Node.js Tests
      - name: Run Node.js Tests
        run: |
          echo "Running Node.js tests with Jest..."
          
          # Check if Jest is available and tests exist
          if docker compose exec -T node-cache test -f package.json; then
            echo "Running Jest test suite..."
            
            # Run Jest tests with proper configuration
            docker compose exec -T node-cache npm test -- --colors --verbose --coverage --passWithNoTests
            
            echo "✅ Jest tests completed successfully"
          else
            echo "❌ Node.js test environment not properly configured"
            exit 1
          fi

      # Test Frontend
      - name: Test Frontend
        run: |
          echo "Testing frontend..."
          timeout 30 bash -c 'until curl -f http://localhost:8080 >/dev/null 2>&1; do sleep 2; done'
          echo "Frontend test passed"

      # Cleanup
      - name: Cleanup
        if: always()
        run: |
          docker compose down -v